use ::libc;
extern "C" {
    fn __assert_fail(
        __assertion: *const libc::c_char,
        __file: *const libc::c_char,
        __line: libc::c_uint,
        __function: *const libc::c_char,
    ) -> !;
}
pub type __uint8_t = libc::c_uchar;
pub type __uint32_t = libc::c_uint;
pub type size_t = libc::c_ulong;
pub type uint8_t = __uint8_t;
pub type uint32_t = __uint32_t;
static mut crc32Table: [uint32_t; 256] = [
    0 as libc::c_long as uint32_t,
    0xf26b8303 as libc::c_long as uint32_t,
    0xe13b70f7 as libc::c_long as uint32_t,
    0x1350f3f4 as libc::c_long as uint32_t,
    0xc79a971f as libc::c_long as uint32_t,
    0x35f1141c as libc::c_long as uint32_t,
    0x26a1e7e8 as libc::c_long as uint32_t,
    0xd4ca64eb as libc::c_long as uint32_t,
    0x8ad958cf as libc::c_long as uint32_t,
    0x78b2dbcc as libc::c_long as uint32_t,
    0x6be22838 as libc::c_long as uint32_t,
    0x9989ab3b as libc::c_long as uint32_t,
    0x4d43cfd0 as libc::c_long as uint32_t,
    0xbf284cd3 as libc::c_long as uint32_t,
    0xac78bf27 as libc::c_long as uint32_t,
    0x5e133c24 as libc::c_long as uint32_t,
    0x105ec76f as libc::c_long as uint32_t,
    0xe235446c as libc::c_long as uint32_t,
    0xf165b798 as libc::c_long as uint32_t,
    0x30e349b as libc::c_long as uint32_t,
    0xd7c45070 as libc::c_long as uint32_t,
    0x25afd373 as libc::c_long as uint32_t,
    0x36ff2087 as libc::c_long as uint32_t,
    0xc494a384 as libc::c_long as uint32_t,
    0x9a879fa0 as libc::c_long as uint32_t,
    0x68ec1ca3 as libc::c_long as uint32_t,
    0x7bbcef57 as libc::c_long as uint32_t,
    0x89d76c54 as libc::c_long as uint32_t,
    0x5d1d08bf as libc::c_long as uint32_t,
    0xaf768bbc as libc::c_long as uint32_t,
    0xbc267848 as libc::c_long as uint32_t,
    0x4e4dfb4b as libc::c_long as uint32_t,
    0x20bd8ede as libc::c_long as uint32_t,
    0xd2d60ddd as libc::c_long as uint32_t,
    0xc186fe29 as libc::c_long as uint32_t,
    0x33ed7d2a as libc::c_long as uint32_t,
    0xe72719c1 as libc::c_long as uint32_t,
    0x154c9ac2 as libc::c_long as uint32_t,
    0x61c6936 as libc::c_long as uint32_t,
    0xf477ea35 as libc::c_long as uint32_t,
    0xaa64d611 as libc::c_long as uint32_t,
    0x580f5512 as libc::c_long as uint32_t,
    0x4b5fa6e6 as libc::c_long as uint32_t,
    0xb93425e5 as libc::c_long as uint32_t,
    0x6dfe410e as libc::c_long as uint32_t,
    0x9f95c20d as libc::c_long as uint32_t,
    0x8cc531f9 as libc::c_long as uint32_t,
    0x7eaeb2fa as libc::c_long as uint32_t,
    0x30e349b1 as libc::c_long as uint32_t,
    0xc288cab2 as libc::c_long as uint32_t,
    0xd1d83946 as libc::c_long as uint32_t,
    0x23b3ba45 as libc::c_long as uint32_t,
    0xf779deae as libc::c_long as uint32_t,
    0x5125dad as libc::c_long as uint32_t,
    0x1642ae59 as libc::c_long as uint32_t,
    0xe4292d5a as libc::c_long as uint32_t,
    0xba3a117e as libc::c_long as uint32_t,
    0x4851927d as libc::c_long as uint32_t,
    0x5b016189 as libc::c_long as uint32_t,
    0xa96ae28a as libc::c_long as uint32_t,
    0x7da08661 as libc::c_long as uint32_t,
    0x8fcb0562 as libc::c_long as uint32_t,
    0x9c9bf696 as libc::c_long as uint32_t,
    0x6ef07595 as libc::c_long as uint32_t,
    0x417b1dbc as libc::c_long as uint32_t,
    0xb3109ebf as libc::c_long as uint32_t,
    0xa0406d4b as libc::c_long as uint32_t,
    0x522bee48 as libc::c_long as uint32_t,
    0x86e18aa3 as libc::c_long as uint32_t,
    0x748a09a0 as libc::c_long as uint32_t,
    0x67dafa54 as libc::c_long as uint32_t,
    0x95b17957 as libc::c_long as uint32_t,
    0xcba24573 as libc::c_long as uint32_t,
    0x39c9c670 as libc::c_long as uint32_t,
    0x2a993584 as libc::c_long as uint32_t,
    0xd8f2b687 as libc::c_long as uint32_t,
    0xc38d26c as libc::c_long as uint32_t,
    0xfe53516f as libc::c_long as uint32_t,
    0xed03a29b as libc::c_long as uint32_t,
    0x1f682198 as libc::c_long as uint32_t,
    0x5125dad3 as libc::c_long as uint32_t,
    0xa34e59d0 as libc::c_long as uint32_t,
    0xb01eaa24 as libc::c_long as uint32_t,
    0x42752927 as libc::c_long as uint32_t,
    0x96bf4dcc as libc::c_long as uint32_t,
    0x64d4cecf as libc::c_long as uint32_t,
    0x77843d3b as libc::c_long as uint32_t,
    0x85efbe38 as libc::c_long as uint32_t,
    0xdbfc821c as libc::c_long as uint32_t,
    0x2997011f as libc::c_long as uint32_t,
    0x3ac7f2eb as libc::c_long as uint32_t,
    0xc8ac71e8 as libc::c_long as uint32_t,
    0x1c661503 as libc::c_long as uint32_t,
    0xee0d9600 as libc::c_long as uint32_t,
    0xfd5d65f4 as libc::c_long as uint32_t,
    0xf36e6f7 as libc::c_long as uint32_t,
    0x61c69362 as libc::c_long as uint32_t,
    0x93ad1061 as libc::c_long as uint32_t,
    0x80fde395 as libc::c_long as uint32_t,
    0x72966096 as libc::c_long as uint32_t,
    0xa65c047d as libc::c_long as uint32_t,
    0x5437877e as libc::c_long as uint32_t,
    0x4767748a as libc::c_long as uint32_t,
    0xb50cf789 as libc::c_long as uint32_t,
    0xeb1fcbad as libc::c_long as uint32_t,
    0x197448ae as libc::c_long as uint32_t,
    0xa24bb5a as libc::c_long as uint32_t,
    0xf84f3859 as libc::c_long as uint32_t,
    0x2c855cb2 as libc::c_long as uint32_t,
    0xdeeedfb1 as libc::c_long as uint32_t,
    0xcdbe2c45 as libc::c_long as uint32_t,
    0x3fd5af46 as libc::c_long as uint32_t,
    0x7198540d as libc::c_long as uint32_t,
    0x83f3d70e as libc::c_long as uint32_t,
    0x90a324fa as libc::c_long as uint32_t,
    0x62c8a7f9 as libc::c_long as uint32_t,
    0xb602c312 as libc::c_long as uint32_t,
    0x44694011 as libc::c_long as uint32_t,
    0x5739b3e5 as libc::c_long as uint32_t,
    0xa55230e6 as libc::c_long as uint32_t,
    0xfb410cc2 as libc::c_long as uint32_t,
    0x92a8fc1 as libc::c_long as uint32_t,
    0x1a7a7c35 as libc::c_long as uint32_t,
    0xe811ff36 as libc::c_long as uint32_t,
    0x3cdb9bdd as libc::c_long as uint32_t,
    0xceb018de as libc::c_long as uint32_t,
    0xdde0eb2a as libc::c_long as uint32_t,
    0x2f8b6829 as libc::c_long as uint32_t,
    0x82f63b78 as libc::c_long as uint32_t,
    0x709db87b as libc::c_long as uint32_t,
    0x63cd4b8f as libc::c_long as uint32_t,
    0x91a6c88c as libc::c_long as uint32_t,
    0x456cac67 as libc::c_long as uint32_t,
    0xb7072f64 as libc::c_long as uint32_t,
    0xa457dc90 as libc::c_long as uint32_t,
    0x563c5f93 as libc::c_long as uint32_t,
    0x82f63b7 as libc::c_long as uint32_t,
    0xfa44e0b4 as libc::c_long as uint32_t,
    0xe9141340 as libc::c_long as uint32_t,
    0x1b7f9043 as libc::c_long as uint32_t,
    0xcfb5f4a8 as libc::c_long as uint32_t,
    0x3dde77ab as libc::c_long as uint32_t,
    0x2e8e845f as libc::c_long as uint32_t,
    0xdce5075c as libc::c_long as uint32_t,
    0x92a8fc17 as libc::c_long as uint32_t,
    0x60c37f14 as libc::c_long as uint32_t,
    0x73938ce0 as libc::c_long as uint32_t,
    0x81f80fe3 as libc::c_long as uint32_t,
    0x55326b08 as libc::c_long as uint32_t,
    0xa759e80b as libc::c_long as uint32_t,
    0xb4091bff as libc::c_long as uint32_t,
    0x466298fc as libc::c_long as uint32_t,
    0x1871a4d8 as libc::c_long as uint32_t,
    0xea1a27db as libc::c_long as uint32_t,
    0xf94ad42f as libc::c_long as uint32_t,
    0xb21572c as libc::c_long as uint32_t,
    0xdfeb33c7 as libc::c_long as uint32_t,
    0x2d80b0c4 as libc::c_long as uint32_t,
    0x3ed04330 as libc::c_long as uint32_t,
    0xccbbc033 as libc::c_long as uint32_t,
    0xa24bb5a6 as libc::c_long as uint32_t,
    0x502036a5 as libc::c_long as uint32_t,
    0x4370c551 as libc::c_long as uint32_t,
    0xb11b4652 as libc::c_long as uint32_t,
    0x65d122b9 as libc::c_long as uint32_t,
    0x97baa1ba as libc::c_long as uint32_t,
    0x84ea524e as libc::c_long as uint32_t,
    0x7681d14d as libc::c_long as uint32_t,
    0x2892ed69 as libc::c_long as uint32_t,
    0xdaf96e6a as libc::c_long as uint32_t,
    0xc9a99d9e as libc::c_long as uint32_t,
    0x3bc21e9d as libc::c_long as uint32_t,
    0xef087a76 as libc::c_long as uint32_t,
    0x1d63f975 as libc::c_long as uint32_t,
    0xe330a81 as libc::c_long as uint32_t,
    0xfc588982 as libc::c_long as uint32_t,
    0xb21572c9 as libc::c_long as uint32_t,
    0x407ef1ca as libc::c_long as uint32_t,
    0x532e023e as libc::c_long as uint32_t,
    0xa145813d as libc::c_long as uint32_t,
    0x758fe5d6 as libc::c_long as uint32_t,
    0x87e466d5 as libc::c_long as uint32_t,
    0x94b49521 as libc::c_long as uint32_t,
    0x66df1622 as libc::c_long as uint32_t,
    0x38cc2a06 as libc::c_long as uint32_t,
    0xcaa7a905 as libc::c_long as uint32_t,
    0xd9f75af1 as libc::c_long as uint32_t,
    0x2b9cd9f2 as libc::c_long as uint32_t,
    0xff56bd19 as libc::c_long as uint32_t,
    0xd3d3e1a as libc::c_long as uint32_t,
    0x1e6dcdee as libc::c_long as uint32_t,
    0xec064eed as libc::c_long as uint32_t,
    0xc38d26c4 as libc::c_long as uint32_t,
    0x31e6a5c7 as libc::c_long as uint32_t,
    0x22b65633 as libc::c_long as uint32_t,
    0xd0ddd530 as libc::c_long as uint32_t,
    0x417b1db as libc::c_long as uint32_t,
    0xf67c32d8 as libc::c_long as uint32_t,
    0xe52cc12c as libc::c_long as uint32_t,
    0x1747422f as libc::c_long as uint32_t,
    0x49547e0b as libc::c_long as uint32_t,
    0xbb3ffd08 as libc::c_long as uint32_t,
    0xa86f0efc as libc::c_long as uint32_t,
    0x5a048dff as libc::c_long as uint32_t,
    0x8ecee914 as libc::c_long as uint32_t,
    0x7ca56a17 as libc::c_long as uint32_t,
    0x6ff599e3 as libc::c_long as uint32_t,
    0x9d9e1ae0 as libc::c_long as uint32_t,
    0xd3d3e1ab as libc::c_long as uint32_t,
    0x21b862a8 as libc::c_long as uint32_t,
    0x32e8915c as libc::c_long as uint32_t,
    0xc083125f as libc::c_long as uint32_t,
    0x144976b4 as libc::c_long as uint32_t,
    0xe622f5b7 as libc::c_long as uint32_t,
    0xf5720643 as libc::c_long as uint32_t,
    0x7198540 as libc::c_long as uint32_t,
    0x590ab964 as libc::c_long as uint32_t,
    0xab613a67 as libc::c_long as uint32_t,
    0xb831c993 as libc::c_long as uint32_t,
    0x4a5a4a90 as libc::c_long as uint32_t,
    0x9e902e7b as libc::c_long as uint32_t,
    0x6cfbad78 as libc::c_long as uint32_t,
    0x7fab5e8c as libc::c_long as uint32_t,
    0x8dc0dd8f as libc::c_long as uint32_t,
    0xe330a81a as libc::c_long as uint32_t,
    0x115b2b19 as libc::c_long as uint32_t,
    0x20bd8ed as libc::c_long as uint32_t,
    0xf0605bee as libc::c_long as uint32_t,
    0x24aa3f05 as libc::c_long as uint32_t,
    0xd6c1bc06 as libc::c_long as uint32_t,
    0xc5914ff2 as libc::c_long as uint32_t,
    0x37faccf1 as libc::c_long as uint32_t,
    0x69e9f0d5 as libc::c_long as uint32_t,
    0x9b8273d6 as libc::c_long as uint32_t,
    0x88d28022 as libc::c_long as uint32_t,
    0x7ab90321 as libc::c_long as uint32_t,
    0xae7367ca as libc::c_long as uint32_t,
    0x5c18e4c9 as libc::c_long as uint32_t,
    0x4f48173d as libc::c_long as uint32_t,
    0xbd23943e as libc::c_long as uint32_t,
    0xf36e6f75 as libc::c_long as uint32_t,
    0x105ec76 as libc::c_long as uint32_t,
    0x12551f82 as libc::c_long as uint32_t,
    0xe03e9c81 as libc::c_long as uint32_t,
    0x34f4f86a as libc::c_long as uint32_t,
    0xc69f7b69 as libc::c_long as uint32_t,
    0xd5cf889d as libc::c_long as uint32_t,
    0x27a40b9e as libc::c_long as uint32_t,
    0x79b737ba as libc::c_long as uint32_t,
    0x8bdcb4b9 as libc::c_long as uint32_t,
    0x988c474d as libc::c_long as uint32_t,
    0x6ae7c44e as libc::c_long as uint32_t,
    0xbe2da0a5 as libc::c_long as uint32_t,
    0x4c4623a6 as libc::c_long as uint32_t,
    0x5f16d052 as libc::c_long as uint32_t,
    0xad7d5351 as libc::c_long as uint32_t,
];
#[no_mangle]
pub unsafe extern "C" fn crc32c(
    mut crc: uint32_t,
    mut buf: *const libc::c_void,
    mut size: size_t,
) -> uint32_t {
    let mut p: *const uint8_t = buf as *const uint8_t;
    loop {
        let fresh0 = size;
        size = size.wrapping_sub(1);
        if !(fresh0 != 0) {
            break;
        }
        let fresh1 = p;
        p = p.offset(1);
        crc = crc32Table[((crc ^ *fresh1 as libc::c_uint)
            & 0xff as libc::c_int as libc::c_uint) as usize] ^ crc >> 8 as libc::c_int;
    }
    return crc;
}
#[no_mangle]
pub unsafe extern "C" fn ul_crc32c_exclude_offset(
    mut crc: uint32_t,
    mut buf: *const libc::c_uchar,
    mut size: size_t,
    mut exclude_off: size_t,
    mut exclude_len: size_t,
) -> uint32_t {
    let mut i: size_t = 0;
    if exclude_off.wrapping_add(exclude_len) <= size {} else {
        __assert_fail(
            b"(exclude_off + exclude_len) <= size\0" as *const u8 as *const libc::c_char,
            b"lib/crc32c.c\0" as *const u8 as *const libc::c_char,
            111 as libc::c_int as libc::c_uint,
            (*::core::mem::transmute::<
                &[u8; 91],
                &[libc::c_char; 91],
            >(
                b"uint32_t ul_crc32c_exclude_offset(uint32_t, const unsigned char *, size_t, size_t, size_t)\0",
            ))
                .as_ptr(),
        );
    }
    'c_1283: {
        if exclude_off.wrapping_add(exclude_len) <= size {} else {
            __assert_fail(
                b"(exclude_off + exclude_len) <= size\0" as *const u8
                    as *const libc::c_char,
                b"lib/crc32c.c\0" as *const u8 as *const libc::c_char,
                111 as libc::c_int as libc::c_uint,
                (*::core::mem::transmute::<
                    &[u8; 91],
                    &[libc::c_char; 91],
                >(
                    b"uint32_t ul_crc32c_exclude_offset(uint32_t, const unsigned char *, size_t, size_t, size_t)\0",
                ))
                    .as_ptr(),
            );
        }
    };
    crc = crc32c(crc, buf as *const libc::c_void, exclude_off);
    i = 0 as libc::c_int as size_t;
    while i < exclude_len {
        let mut zero: uint8_t = 0 as libc::c_int as uint8_t;
        crc = crc32c(
            crc,
            &mut zero as *mut uint8_t as *const libc::c_void,
            1 as libc::c_int as size_t,
        );
        i = i.wrapping_add(1);
        i;
    }
    crc = crc32c(
        crc,
        &*buf.offset(exclude_off.wrapping_add(exclude_len) as isize)
            as *const libc::c_uchar as *const libc::c_void,
        size.wrapping_sub(exclude_off.wrapping_add(exclude_len)),
    );
    return crc;
}
